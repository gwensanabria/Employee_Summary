# Instructions

☐ The application will prompt the user for information about the team manager and then information about the team members.
☐ The user can input any number of team members, and they may be a mix of engineers and interns.
☐ This assignment must also pass all unit tests.
☐ When the user has completed building the team, the application will create an HTML file that displays a nicely formatted team roster based on the information provided by the user.


### Hints

☐ Create multiple HTML templates for each type of user. For example, you could use the following templates: `main.html`, `engineer.html`, `intern.html`, `manager.html`
☐ You will want to make your methods as pure as possible. This means try to make your methods simple so that they are easier to test.
☐ The different employee types should all inherit some methods and properties from a base class of `Employee`.
☐ In your HTML template files, you may want to add a placeholder character that helps your program identify where the dynamic markup begins and ends.


### Classes

✔ The project must have the these classes: `Employee`, `Manager`, `Engineer`,`Intern`. @done (7/3/2020, 2:44:16 PM)
    ☐ The tests for these classes in the `tests` directory must all pass.

✔ The first class is an `Employee` parent class with the following properties and methods: @done (7/3/2020, 3:15:51 PM)

  * name
  * id
  * email
  * getName()
  * getId()
  * getEmail()
  * getRole() // Returns 'Employee'

✔ The other three classes will extend `Employee`. @done (7/3/2020, 3:15:56 PM)

✔ In addition to `Employee`'s properties and methods, `Manager` will also have: @done (7/3/2020, 3:15:59 PM)

  * officeNumber

  * getRole() // Overridden to return 'Manager'

✔ In addition to `Employee`'s properties and methods, `Engineer` will also have: @done (7/3/2020, 3:16:04 PM)

  * github  // GitHub username

  * getGithub()

  * getRole() // Overridden to return 'Engineer'

✔ In addition to `Employee`'s properties and methods, `Intern` will also have: @done (7/3/2020, 3:16:06 PM)

  * school 

  * getSchool()

  * getRole() // Overridden to return 'Intern'